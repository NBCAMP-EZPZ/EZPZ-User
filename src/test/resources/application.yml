spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: ${TEST_DATASOURCE_URL}
    username: ${TEST_DATASOURCE_USERNAME}
    password: ${TEST_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 20MB

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO}  # Hibernate 자동 DDL 생성 옵션

    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true  # SQL 쿼리 포맷팅 여부 - 프로덕션 환경에서는 보안, 성능 고려해서 사용
        use_sql_comments: true  # SQL 쿼리 주석 사용 여부 - 보안, 성능 이슈, (실행되는 JPQL을 볼 수 있다.)

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

logging.level:
  org.hibernate.SQL: debug  # Hibernate SQL 쿼리를 debug 레벨로 설정하여 로깅합니다.
  org.hibernate.orm.jdbc.bind: trace  # 스프링 부트 3.x, Hibernate 6.x에서 JDBC 바인딩을 trace 레벨로 설정합니다.

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access-token:
    ttl: ${ACCESS_TOKEN_TTL}
  refresh-token:
    ttl: ${REFRESH_TOKEN_TTL}

server:
  port: ${SERVER_PORT}